id: mcp-identity-gate
applications:
  - name: slack
    command: npm run start:slack
    health-check-type: process
    routes:
      - route: 'https://slack.${DOMAIN}'
    stack: cflinuxfs4
    memory: 512M
    instances: 1
    version: 0.0.2 
    env:
      NODE_OPTIONS: --max-http-header-size=80000
      NODE_ENV: production
      LOG_SENSITIVE_CONNECTION_DATA: true
      LOG_REMOTE_USER: true
      LOG_REFERER: true
      YJS_URL: 'wss://hp.cfapps.us10-001.hana.ondemand.com'
      MCP_DASHBOARD_URL: 'https://dashboard.${DOMAIN}'
      MCP_INSPECTOR_URL: 'https://inspector.${DOMAIN}'
      MCP_REGISTRY_URL: 'https://registry.${DOMAIN}/mcp'
      MCP_GATEWAY_URL: 'https://mcp-router.${DOMAIN}/mcp'
      BASE_URL: 'https://slack.${DOMAIN}'
    buildpacks:
      - https://github.com/cloudfoundry/nodejs-buildpack
  - name: registry
    command: npm run start:registry
    health-check-type: process
    routes:
      - route: 'https://registry.${DOMAIN}'
    stack: cflinuxfs4
    memory: 2048M
    instances: 1
    version: 0.0.2
    env:
      NODE_OPTIONS: "--max-old-space-size=1024 --max-http-header-size=80000"
      NODE_ENV: production
      LOG_SENSITIVE_CONNECTION_DATA: true
      LOG_REMOTE_USER: true
      LOG_REFERER: true
      YJS_URL: 'wss://hp.cfapps.us10-001.hana.ondemand.com'
      MCP_DASHBOARD_URL: 'https://dashboard.${DOMAIN}'
      MCP_GATEWAY_URL: 'https://mcp-router.${DOMAIN}/mcp'
      BASE_URL: 'https://registry.${DOMAIN}'
    buildpacks:
      - https://github.com/cloudfoundry/nodejs-buildpack
  - name: web
    command: npm run start:web
    routes:
      - route: 'https://assistant.${DOMAIN}'
    stack: cflinuxfs4
    memory: 512M
    instances: 3
    version: 0.0.2
    env:
      NODE_OPTIONS: --max-http-header-size=80000
      NODE_ENV: production
      LOG_SENSITIVE_CONNECTION_DATA: true
      LOG_REMOTE_USER: true
      LOG_REFERER: true
      YJS_URL: 'wss://hp.cfapps.us10-001.hana.ondemand.com'
      MCP_GATEWAY_URL: 'https://mcp-router.${DOMAIN}/mcp'
      MCP_DASHBOARD_URL: 'https://dashboard.${DOMAIN}'
      BASE_URL: 'https://assistant.${DOMAIN}'
    buildpacks:
      - https://github.com/cloudfoundry/nodejs-buildpack

  - name: dashboard
    routes:
      - route: 'https://dashboard.${DOMAIN}'
    command: npm run start:dashboard
    stack: cflinuxfs4
    memory: 512M
    instances: 1
    version: 0.0.2
    env:
      NODE_OPTIONS: --max-http-header-size=80000
      NODE_ENV: production
      LOG_SENSITIVE_CONNECTION_DATA: true
      LOG_REMOTE_USER: true
      LOG_REFERER: true
      YJS_URL: 'wss://hp.cfapps.us10-001.hana.ondemand.com'
      BASE_URL: 'https://dashboard.${DOMAIN}'
      MCP_REGISTRY_URL: https://registry.${DOMAIN}/mcp
      MCP_GATEWAY_URL: https://mcp-router.${DOMAIN}/mcp
    buildpacks:
      - https://github.com/cloudfoundry/nodejs-buildpack
  - name: router
    routes:
      - route: 'https://mcp-id-gate.cert.cf.eu12.hana.ondemand.com'
    command: npm run start:router
    stack: cflinuxfs4
    memory: 2048M
    instances: 1
    version: 0.0.2
    env:
      NODE_OPTIONS: --max-http-header-size=80000
      NODE_ENV: production
      LOG_SENSITIVE_CONNECTION_DATA: true
      LOG_REMOTE_USER: true
      LOG_REFERER: true
      YJS_URL: 'wss://hp.cfapps.us10-001.hana.ondemand.com'
      BASE_URL: 'https://mcp-id-gate.cert.cf.eu12.hana.ondemand.com'
      MCP_REGISTRY_URL: https://registry.${DOMAIN}/mcp
    buildpacks:
      - https://github.com/cloudfoundry/nodejs-buildpack
  - name: whoami
    routes:
      - route: 'https://whoami.${DOMAIN}'

    command: npm run start:whoami
    stack: cflinuxfs4
    memory: 524M
    instances: 1
    version: 0.0.2

    env:
      NODE_OPTIONS: --max-http-header-size=80000
      NODE_ENV: production
      LOG_SENSITIVE_CONNECTION_DATA: true
      LOG_REMOTE_USER: true
      LOG_REFERER: true
      YJS_URL: 'wss://hp.cfapps.us10-001.hana.ondemand.com'
      BASE_URL: 'https://whoami.${DOMAIN}'
    buildpacks:
      - https://github.com/cloudfoundry/nodejs-buildpack
      
  - name: inspector
    routes:
      - route: 'https://inspector.${DOMAIN}'
      - route: 'https://inspector-proxy.${DOMAIN}'
        port: 8081
    command: npm run inspector
    stack: cflinuxfs4
    memory: 256M
    instances: 1
    version: 0.0.2
    env:
      NODE_OPTIONS: --max-http-header-size=80000
      NODE_ENV: production
      CLIENT_PORT: 8080
      SERVER_PORT: 8081
      DANGEROUSLY_OMIT_AUTH: true
      HOST: '0.0.0.0'


      MCP_PROXY_FULL_ADDRESS: 'https://inspector.${DOMAIN}'
    buildpacks:
      - https://github.com/cloudfoundry/nodejs-buildpack

  - name: inspector-server
    routes:
      - route: 'https://inspector-server.${DOMAIN}'
    command: npm run inspector
    readiness-health-check-type: none
    health-check-type: none

    stack: cflinuxfs4
    instances: 1
    version: 0.0.2
    env:
      NODE_OPTIONS: --max-http-header-size=80000
      NODE_ENV: production
      SERVER_PORT: 8080
      DANGEROUSLY_OMIT_AUTH: true
      HOST: '0.0.0.0'
    buildpacks:
      - https://github.com/cloudfoundry/nodejs-buildpack

services:
    - name: mcp-identity-ias
      type: org.cloudfoundry.managed-service
      parameters:
      service: identity
      service-plan: application
      service-name: ias
      config:
          display-name: MCP Identity Service
          multi-tenant: true
          oauth2-configuration:
          public-client: true
          redirect-uris:
              - https://*.${DOMAIN}/login/callback
          xsuaa-cross-consumption: true
          default-attributes:
            email: "mail"
            tenant_id: "${app_tid}"
            groups: "applicationGroups"
            first_name: "firstName"
            last_name: "lastName"
            assertion-attributes:
              email: "mail"
              groups: "applicationGroups"
 